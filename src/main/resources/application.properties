# Spring Boot application name
spring.application.name=firstspringproject

# === AUTH0 WEB LOGIN (For /login flow) ===
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid, profile, email
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.auth0.redirect-uri=${AUTH0_REDIRECT_URI:http://localhost:8080/login/oauth2/code/auth0}
spring.security.oauth2.client.provider.auth0.issuer-uri=https://${AUTH0_DOMAIN}/

# Optional: for display name (not mandatory)
spring.security.oauth2.client.client-name=Auth0

# === DATABASE SETTINGS (PostgreSQL) ===
spring.datasource.url=jdbc:postgresql://localhost:5432/authdb
spring.datasource.username=postgres
spring.datasource.password=Kavi!7605
spring.datasource.driver-class-name=org.postgresql.Driver

# Database schema update mode
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# === AUTH0 MANAGEMENT API (Used by backend to create users) ===
auth0.audience=https://${AUTH0_DOMAIN}/api/v2/
auth0.issuer=https://${AUTH0_DOMAIN}/

auth0.mgmt.client-id=${AUTH0_MGMT_CLIENT_ID}
auth0.mgmt.client-secret=${AUTH0_MGMT_CLIENT_SECRET}
auth0.mgmt.audience=${AUTH0_AUDIENCE}
auth0.mgmt.domain=${AUTH0_DOMAIN}

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://${AUTH0_DOMAIN}/
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://${AUTH0_DOMAIN}/.well-known/jwks.json
